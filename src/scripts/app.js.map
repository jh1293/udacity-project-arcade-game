{"version":3,"sources":["webpack:///webpack/bootstrap 0b7f3c073af76317500c","webpack:///./src/scripts/modules/resources.js","webpack:///./src/scripts/modules/audio.js","webpack:///./src/scripts/modules/engine.js","webpack:///./src/scripts/modules/entities.js","webpack:///./src/scripts/modules/gui.js","webpack:///./src/scripts/modules/map.js","webpack:///./src/scripts/modules/game.js","webpack:///./src/scripts/modules/input.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AC7DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;;;ACvCA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,kBAAkB;AAChE;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;ACxEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,4CAA4C,gBAAgB;AAC5D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;;;;;;;;;;;;;;;;;AClJR;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD,KAAK;;AAEL;;AAEA;AACA;AACA,8CAA8C,SAAS;AACvD,KAAK;AACL;;AAEA;AACA;AACA,gDAAgD,SAAS;AACzD,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEQ;;;;;;;;;;ACpIR;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uEAA0B;AAC1B,uGAAkE;AAClE,+FAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAwB;AACxB,wEAAmC;AACnC;AACA,eAAe,OAAO;AACtB,wEAAmC;AACnC;AACA;AACA,iEAAoB;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;AACrD,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kCAAkC;AACjE;AACA;AACA,+BAA+B,kCAAkC;AACjE;AACA,CAAC;;;;AAID,qBAAqB,eAAe;AACpC,qBAAqB,eAAe;;;;;;;;;ACnPpC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AAAA;AAAA","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0b7f3c073af76317500c","export default class Resources {\r\n  constructor() {\r\n    this.resPool = {};\r\n  }\r\n\r\n  load(resURL) {\r\n    let thisArg = this;\r\n    let resURLArray = resURL.split('.');\r\n    let type = resURLArray[resURLArray.length - 1];\r\n    if (thisArg.resPool[resURL]) {\r\n      /**\r\n       * If current requested resource already exists in resource pool, return it.\r\n       */\r\n      return thisArg.resPool[resURL];\r\n    } else {\r\n\r\n      if (type === 'png') {\r\n        /**\r\n         * If current requested resource does not exists in resource pool, create new one and return it, then add it to the resource pool for caching.\r\n         */\r\n        let image = new Image();\r\n        image.src = resURL;\r\n        image.onload = function() {\r\n          thisArg.resPool[resURL] = image;\r\n        };\r\n        return image;\r\n      }\r\n\r\n      if (type === 'wav') {\r\n        let audio = new Audio();\r\n        audio.src = resURL;\r\n        audio.onload = function() {\r\n          thisArg.resPool[resURL] = audio;\r\n        }\r\n        return audio;\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scripts/modules/resources.js\n// module id = 0\n// module chunks = 0","import Resources from './resources.js';\r\n\r\nlet resources = new Resources();\r\n\r\nexport default class Audio {\r\n  constructor() {\r\n    this.effectsPool = {};\r\n  }\r\n\r\n  get effects() {\r\n    return this.effectsPool;\r\n  }\r\n\r\n  set effects(effects) {\r\n    effects.forEach((value) => {\r\n      this.effectsPool[value] = resources.load(value);\r\n    });\r\n  }\r\n\r\n  play(audio) {\r\n    this.effectsPool[audio].play();\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scripts/modules/audio.js\n// module id = 1\n// module chunks = 0","export default class Engine {\r\n  constructor() {\r\n    this.target = null;\r\n    this.stamp = 0;\r\n    this.delta = 0;\r\n    this.frames = 0;\r\n    this.state = null;\r\n    this.gameMode = '';\r\n  }\r\n\r\n  bind(context) {\r\n    this.target = context;\r\n  }\r\n\r\n  get fps() {\r\n    return this.delta === 0 ? 0: Math.trunc(1 / this.delta);\r\n  }\r\n\r\n  run() {\r\n    // Initialization was seperated from main loop, which will only be called once.\r\n    this.init();\r\n    function loop(stamp) {\r\n      this.delta = (stamp - this.stamp) / 1000;\r\n      this.stamp = stamp;\r\n      /**\r\n       * Divide the main loop into two seperated states.\r\n       * With state 100, main loop runs as normal.\r\n       * With state null, delta calculation runs as normal, while update and render process were been suspended.\r\n       * This way, main loop can be controlled at will.\r\n       */\r\n      if (this.state === 100) {\r\n          this.frames++;\r\n          this.update(this.delta);\r\n          this.cleanup(this.target);\r\n          this.render(this.target);\r\n      }\r\n      this.loopID = window.requestAnimationFrame(loop.bind(this));\r\n    }\r\n    loop.call(this);\r\n    /**\r\n     * The engine started with the state of paused, it will switch to normal state after 1000ms.\r\n     * Within the 1000ms, delta time will continue to be calculated, while update and render process were suspended.\r\n     * The purpose of doing this is the make sure all update and render process were under stable delta time.\r\n     */\r\n    setTimeout(() => {this.state = 100}, 1000);\r\n  }\r\n\r\n  collisionCheck(subject, ...object) {\r\n    let dx, dy, distance, diff_radius;\r\n    object.forEach((value) => {\r\n      dx = subject.collision.center.x - value.collision.center.x;\r\n      dy = subject.collision.center.y - value.collision.center.y;\r\n      distance = Math.sqrt(dx * dx + dy * dy);\r\n      diff_radius = subject.collision.radius + value.collision.radius;\r\n      if (Number(distance) < Number(diff_radius)) {\r\n        let event = new CustomEvent('break', {detail: 'collide'});\r\n        document.dispatchEvent(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  resume() {\r\n    this.state = 100;\r\n  }\r\n\r\n  pause() {\r\n    this.state = null;\r\n  }\r\n\r\n  stop() {\r\n    window.cancelAnimationFrame(this.loopID);\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scripts/modules/engine.js\n// module id = 2\n// module chunks = 0","import Resources from './resources.js';\r\n\r\nlet resources = new Resources();\r\n\r\nclass Actor {\r\n  constructor() {\r\n    this.pos = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.spriterImage = null;\r\n    this.collision = {\r\n      center: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      radius: 0\r\n    };\r\n  }\r\n\r\n  get width() {\r\n    return this.spriterImage.width;\r\n  }\r\n\r\n  get height() {\r\n    return this.spriterImage.height;\r\n  }\r\n\r\n  get spriter() {\r\n    return this.spriterImage;\r\n  }\r\n\r\n  set spriter(resURL) {\r\n    this.spriterImage = resources.load(resURL);\r\n  }\r\n\r\n  render(context) {\r\n    context.drawImage(this.spriterImage, this.pos.x, this.pos.y, this.spriterImage.width, this.spriterImage.height);\r\n  }\r\n}\r\n\r\nclass Player extends Actor {\r\n  constructor() {\r\n    super();\r\n    this.dest = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.interval = 0.05;\r\n    this.isMoving = false;\r\n  }\r\n\r\n  update(delta) {\r\n\r\n    // Moveable area restriction\r\n    // '10' at the end of each expression is a tolerance value.\r\n    if (this.dest.x < 0 - 10) {\r\n      this.dest.x = this.pos.x;\r\n    }\r\n    if (this.dest.x > 500 - this.width + 10) {\r\n      this.dest.x = this.pos.x;\r\n    }\r\n    if (this.dest.y < (-30) - 10) {\r\n      this.dest.y = this.pos.y;\r\n    }\r\n    if (this.dest.y > 650 - this.height + 10) {\r\n      this.dest.y = this.pos.y;\r\n    }\r\n\r\n\r\n\r\n    // Condition to win\r\n    if (this.pos.y < -28) {\r\n      let event = new CustomEvent('break', {detail: 'reach'});\r\n      document.dispatchEvent(event);\r\n    }\r\n\r\n    // if (window.shared.events.game === 'lose') {\r\n    //   this.pos.x = this.dest.x = 200;\r\n    //   this.pos.y = this.dest.y = 450;\r\n    // }\r\n\r\n    // if (window.shared.events.game) {\r\n    //   this.pos.x = this.dest.x = 200;\r\n    //   this.pos.y = this.dest.y = 450;\r\n    // }\r\n\r\n    // Update position\r\n    this.pos.x += (this.dest.x - this.pos.x) / this.interval * delta;\r\n    this.pos.y += (this.dest.y - this.pos.y) / this.interval * delta;\r\n  }\r\n\r\n  react(event) {\r\n    // Handle input event\r\n    if (this.isMoving != true) {\r\n      switch (event.key) {\r\n        case 'Up':\r\n        case 'ArrowUp':\r\n          this.dest.y = this.pos.y - 80;\r\n          break;\r\n        case 'Down':\r\n        case 'ArrowDown':\r\n          this.dest.y = this.pos.y + 80;\r\n          break;\r\n        case 'Left':\r\n        case 'ArrowLeft':\r\n          this.dest.x = this.pos.x - 100;\r\n          break;\r\n        case 'Right':\r\n        case 'ArrowRight':\r\n          this.dest.x = this.pos.x + 100;\r\n          break;\r\n      }\r\n      this.isMoving = true;\r\n      setTimeout(() => {this.isMoving = false;}, this.interval * 4000);\r\n    }\r\n\r\n    switch (event.detail) {\r\n      case 'collide':\r\n        this.pos.x = this.dest.x = 200;\r\n        this.pos.y = this.dest.y = 450;\r\n        break;\r\n      case 'reach':\r\n        this.pos.x = this.dest.x = 200;\r\n        this.pos.y = this.dest.y = 450;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nclass Enemy extends Actor {\r\n  constructor() {\r\n    super();\r\n    this.v = 100;\r\n    this.r = Math.floor(Math.random() * 5) + 1;\r\n  }\r\n\r\n  update(delta) {\r\n    this.pos.x += this.v * this.r * delta;\r\n    if (this.pos.x > 502) {\r\n      this.pos.x = ((Math.random() * 3) + 1) * (-100);\r\n      this.r = Math.floor(Math.random() * 5) + 1;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Actor, Player, Enemy };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scripts/modules/entities.js\n// module id = 3\n// module chunks = 0","import Resources from './resources.js';\r\n\r\nlet resources = new Resources();\r\n\r\nclass GUI {\r\n  constructor(posX, posY, width, height, className, id) {\r\n    this.element = document.createElement('div');\r\n    this.element.className = className;\r\n    this.element.id = id;\r\n    this.element.style.left = posX + 'px';\r\n    this.element.style.top = posY + 'px';\r\n    this.element.style.width = width + 'px';\r\n    this.element.style.height = height + 'px';\r\n    this.element.style.position = 'absolute';\r\n    this.element.style.visibility = 'hidden';\r\n  }\r\n\r\n  appendTo(id) {\r\n    document.getElementById(id).appendChild(this.element)\r\n  }\r\n\r\n  hide(duration = 0, delay = 0) {\r\n    setTimeout(() => {\r\n      this.element.style.animation = `fadeout ${duration}s forwards`;\r\n      setTimeout(() => {\r\n        this.element.style.visibility = 'hidden';\r\n      }, duration * 1000)\r\n    }, delay * 1000);\r\n  }\r\n\r\n  show(duration = 0, delay = 0) {\r\n    setTimeout(() => {\r\n      this.element.style.visibility = 'visible';\r\n      this.element.style.animation = `fadein ${duration}s forwards`;\r\n    }, delay * 1000);\r\n\r\n  }\r\n\r\n  focus(duration = 0, delay = 0) {\r\n    setTimeout(() => {\r\n      this.element.style.animation = `focus ${duration}s forwards`;\r\n    }, delay * 1000);\r\n  }\r\n\r\n  unfocus(duration = 0, delay = 0) {\r\n    setTimeout(() => {\r\n      this.element.style.animation = `unfocus ${duration}s forwards`;\r\n    }, delay * 1000);\r\n  }\r\n}\r\n\r\nclass Viewport extends GUI {\r\n  constructor(width, height, className, id) {\r\n    super(null, null, width, height, className, id);\r\n    this.element.style.position = 'relative';\r\n    this.element.style.overflow = 'hidden';\r\n  }\r\n}\r\n\r\nclass Canvas extends GUI {\r\n  constructor(width, height, className, id) {\r\n    super(null, null, width, height, className, id);\r\n    this.element = document.createElement('canvas');\r\n    this.element.width = width;\r\n    this.element.height = height;\r\n    this.element.innerHTML = 'It seems like your browser doesn\\'t support HTML5.';\r\n    this.element.style.position = 'absolute';\r\n    this.element.style.zIndex = 0;\r\n    this.element.style.visibility = 'hidden';\r\n  }\r\n\r\n  get width() {\r\n    return this.element.width;\r\n  }\r\n\r\n  get height() {\r\n    return this.element.height;\r\n  }\r\n\r\n  get context() {\r\n    return this.element.getContext('2d');\r\n  }\r\n}\r\n\r\nclass Panel extends GUI {\r\n  constructor(posX, posY, width, height, className, id) {\r\n    super(posX, posY, width, height, className, id);\r\n    this.element.style.zIndex = 100;\r\n  }\r\n}\r\n\r\nclass Button extends GUI {\r\n  constructor(posX, posY, width, height, className, id, value) {\r\n    super(posX, posY, width, height, className, id);\r\n    this.element = document.createElement('button');\r\n    this.element.className = className;\r\n    this.element.id = id;\r\n    this.element.style.left = posX + 'px';\r\n    this.element.style.top = posY + 'px';\r\n    this.element.style.width = width + 'px';\r\n    this.element.style.height = height + 'px';\r\n    this.element.style.position = 'absolute';\r\n    this.element.innerHTML = value;\r\n    this.element.style.visibility = 'hidden';\r\n  }\r\n}\r\n\r\nclass Sprite extends GUI {\r\n  constructor(posX, posY, width, height, className, id, src) {\r\n    super(posX, posY, width, height, className, id);\r\n    this.element = resources.load(src);\r\n    this.element.className = className;\r\n    this.element.id = id;\r\n    this.element.style.left = posX + 'px';\r\n    this.element.style.top = posY + 'px';\r\n    this.element.style.width = width + 'px';\r\n    this.element.style.height = height + 'px';\r\n    this.element.style.position = 'absolute';\r\n  }\r\n}\r\n\r\nclass Textbox extends GUI {\r\n  constructor(posX, posY, width, height, className, id) {\r\n    super(posX, posY, width, height, className, id);\r\n    this.element.innerHTML = 'Choose Your Character';\r\n  }\r\n\r\n  text(text) {\r\n    this.element.innerHTML = text;\r\n  }\r\n}\r\n\r\nexport { GUI, Viewport, Canvas, Panel, Button, Sprite, Textbox };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scripts/modules/gui.js\n// module id = 4\n// module chunks = 0","import Resources from './resources.js';\r\n\r\nlet resources = new Resources();\r\n\r\nexport default class Map {\r\n  constructor() {\r\n    this.displayList = {};\r\n  }\r\n\r\n  get tileSet() {\r\n    return this.displayList;\r\n  }\r\n\r\n  set tileSet(tileSet) {\r\n    let thisArg = this;\r\n    let request = new XMLHttpRequest();\r\n    request.open('GET', tileSet);\r\n    request.responseType = 'json';\r\n    request.send();\r\n    request.onload = function() {\r\n      let _tileSet = request.response;\r\n      for(let index in _tileSet) {\r\n        thisArg.displayList[index] = {};\r\n        thisArg.displayList[index].image = resources.load(_tileSet[index].src);\r\n        thisArg.displayList[index].cor = _tileSet[index].cor;\r\n      }\r\n    }\r\n  }\r\n\r\n  render(context) {\r\n    for (let index in this.displayList) {\r\n      let image = this.displayList[index].image;\r\n      this.displayList[index].cor.forEach((value) => {\r\n        context.drawImage(image, value[0] * 100, value[1] * 80, image.width, image.height);\r\n      });\r\n    }\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scripts/modules/map.js\n// module id = 5\n// module chunks = 0","import Engine from './engine.js';\r\nimport Resources from './resources.js';\r\nimport * as GUI from './gui.js';\r\n// import Input from './input.js';\r\nimport Audio from './audio.js';\r\nimport * as Entities from './entities.js';\r\nimport Map from './map.js';\r\n\r\n/**\r\n * Instantiating area.\r\n */\r\nlet engine = new Engine();  // Game engine\r\nlet viewport = new GUI.Viewport(500, 650, 'viewport', 'viewport');  // Viewport\r\nlet canvas = new GUI.Canvas(500, 650, 'canvas', 'canvas');  // canvas\r\nlet panel = new GUI.Panel(50, 100, 400, 450, 'panel', 'panel');\r\nlet btnStart = new GUI.Button(140, 350, 120, 50, 'btn btn__control--color-green', 'btn-start', 'Start');\r\nlet btnPause = new GUI.Button(10, 10, 80, 30, 'btn btn__control--color-orange', 'btn-pause', 'Pause');\r\nlet optChar1 = new GUI.Sprite(30, 0, 101, 170, 'sprite__char', 'char-1', './images/char-boy.png');\r\nlet optChar2 = new GUI.Sprite(150, 0, 101, 170, 'sprite__char', 'char-2', './images/char-cat-girl.png');\r\nlet optChar3 = new GUI.Sprite(270, 0, 101, 170, 'sprite__char', 'char-3', './images/char-horn-girl.png');\r\nlet optChar4 = new GUI.Sprite(90, 120, 101, 170, 'sprite__char', 'char-4', './images/char-pink-girl.png');\r\nlet optChar5 = new GUI.Sprite(210, 120, 101, 170, 'sprite__char', 'char-5', './images/char-princess-girl.png');\r\nlet panelMsg = new GUI.Textbox(0, 300, 400, 50, 'panel__msg', 'msg');\r\nlet audio = new Audio();  // Sound system\r\nlet player = new Entities.Player();  // Player entity\r\nlet enemies = [];\r\nfor (let i = 0; i < 8; i++) {\r\n  let enemy = new Entities.Enemy();  // Enemy entities\r\n  enemies.push(enemy);\r\n}\r\nlet map = new Map();  // Map\r\n\r\n/**\r\n * Global variables.\r\n */\r\nlet playerCharacter = null;\r\n\r\n/**\r\n * Building scene tree.\r\n * Being the first step of all creations.\r\n */\r\nviewport.appendTo('game');\r\ncanvas.appendTo('viewport');\r\n\r\n/**\r\n * Bind engine to the canvas.\r\n */\r\nengine.bind(canvas.context);\r\n\r\n/**\r\n * All the initialization works should be done within this function.\r\n * The game engine will only call this function one time brfore main loop starts.\r\n */\r\nengine.init = function() {\r\n\r\n  audio.effects = [\r\n    './audio/hit1.wav',\r\n    './audio/hit2.wav',\r\n    './audio/win1.wav',\r\n    './audio/win2.wav',\r\n    './audio/win3.wav',\r\n    './audio/win4.wav'\r\n  ];\r\n\r\n  player.spriter = playerCharacter || './images/char-boy.png';\r\n  player.pos.x = player.dest.x = 200;\r\n  player.pos.y = player.dest.y = 450;\r\n\r\n  enemies.forEach((value, index) => {\r\n    value.spriter = './images/enemy-bug.png';\r\n    value.pos.x = ((Math.random() * 3) + 1) * (-200);  // Keep cars away as the game starts\r\n    if (index % 4 === 0) {  // For each line of stone, there are two cars running\r\n      enemies[index].pos.y = 50;\r\n      enemies[index + 1].pos.y = 130;\r\n      enemies[index + 2].pos.y = 290;\r\n      enemies[index + 3].pos.y = 370;\r\n    }\r\n  });\r\n\r\n  map.tileSet = './images/map.json';\r\n};\r\n\r\n/**\r\n * The first part of main loop.\r\n * This function handles math related stuff, such as update entities, collision check.\r\n */\r\nengine.update = function(delta) {\r\n\r\n  document.getElementById('m-dt').innerHTML = delta.toFixed(4);\r\n  document.getElementById('m-frame').innerHTML = this.frames;\r\n  document.getElementById('m-fps').innerHTML = this.fps;\r\n\r\n  player.collision = {\r\n        center: {\r\n          x: player.pos.x + 50,\r\n          y: player.pos.y + 100\r\n        },\r\n        radius: 36\r\n      };\r\n  player.update(delta);\r\n\r\n  enemies.forEach((value) => {\r\n    value.collision = {\r\n          center: {\r\n            x: value.pos.x + 75,\r\n            y: value.pos.y + 100\r\n          },\r\n          radius: 20\r\n        };\r\n    value.update(delta);\r\n  });\r\n\r\n  engine.collisionCheck(player, ...enemies);\r\n};\r\n\r\n/**\r\n * The second part of main loop.\r\n * Clean up entire canvas before actually drawing this frame.\r\n */\r\nengine.cleanup = function(target) {\r\n  target.clearRect(0, 0, canvas.width, canvas.height);\r\n};\r\n\r\n/**\r\n * The third part of main loop.\r\n * Invoke .render() method of all instances.\r\n */\r\nengine.render = function(target) {\r\n\r\n  map.render(target);\r\n\r\n  enemies.forEach((value) => {\r\n    value.render(target);\r\n  });\r\n  player.render(target);\r\n};\r\n\r\n\r\n\r\n/**\r\n * Handling events.\r\n */\r\n\r\n // Document ready.\r\n(() => {\r\n  engine.run();\r\n\r\n  viewport.show(0.5);\r\n  canvas.show(1, 1);\r\n\r\n  panel.appendTo('viewport');\r\n  btnPause.appendTo('viewport')\r\n  btnStart.appendTo('panel');\r\n  optChar1.appendTo('panel');\r\n  optChar2.appendTo('panel');\r\n  optChar3.appendTo('panel');\r\n  optChar4.appendTo('panel');\r\n  optChar5.appendTo('panel');\r\n  panelMsg.appendTo('panel');\r\n\r\n  // Hide player character before game start.\r\n  player.pos.x = player.dest.x = 200;\r\n  player.pos.y = player.dest.y = 650;\r\n\r\n  setTimeout(() => {\r\n    canvas.unfocus(0.5);\r\n    panel.show(0.5, 0.5);\r\n    panelMsg.show(0.5, 1);\r\n    btnStart.show(0.5, 1.5);\r\n  }, 4000);\r\n})();\r\n\r\n// Character choose\r\nlet elemChars = document.getElementsByClassName('sprite__char');\r\nfor (let i = 0; i < elemChars.length; i++) {\r\n  elemChars[i].addEventListener('click', (event) => {\r\n    let strArray = String(event.target.src).split('/');\r\n    let fileName = strArray[strArray.length - 1];\r\n    let msg;\r\n    playerCharacter = `./images/${fileName}`;\r\n    switch (fileName) {\r\n      case 'char-boy.png':\r\n        msg = 'You\\'ve chosen Boy!';\r\n        break;\r\n      case 'char-cat-girl.png':\r\n        msg = 'You\\'ve chosen Cat Girl!';\r\n        break;\r\n      case 'char-horn-girl.png':\r\n        msg = 'You\\'ve chosen Horn Girl!';\r\n        break;\r\n      case 'char-pink-girl.png':\r\n        msg = 'You\\'ve chosen Pink Girl!';\r\n        break;\r\n      case 'char-princess-girl.png':\r\n        msg = 'You\\'ve chosen Princess Girl!';\r\n        break;\r\n    }\r\n    panelMsg.text(msg);\r\n  });\r\n}\r\n\r\ndocument.getElementById('btn-start').addEventListener('click', (event) => {\r\n  engine.init();\r\n  panel.hide(0.5);\r\n  canvas.focus(0.5, 0.5);\r\n  btnPause.show(0.5, 0.5)\r\n  engine.resume();\r\n  event.preventDefault();\r\n});\r\n\r\ndocument.getElementById('btn-pause').addEventListener('click', (event) => {\r\n  if (engine.state) {\r\n    engine.pause();\r\n  } else {\r\n    engine.resume();\r\n  }\r\n\r\n  event.preventDefault();\r\n});\r\n\r\n\r\ndocument.addEventListener('keydown', (event) => {\r\n  player.react(event);\r\n});\r\n\r\ndocument.addEventListener('break', (event) => {\r\n  player.react(event);\r\n  switch(event.detail) {\r\n    case 'reach':\r\n      engine.pause();\r\n      canvas.unfocus(0.5);\r\n      panel.show(0.5, 0.5);\r\n      btnPause.hide(0.1);\r\n      audio.play(`./audio/win${Math.floor(Math.random() * 4) + 1}.wav`);\r\n      break;\r\n    case 'collide':\r\n      audio.play(`./audio/hit${Math.floor(Math.random() * 2) + 1}.wav`);\r\n  }\r\n});\r\n\r\n\r\n\r\n// setTimeout(() => {engine.pause()}, 4000);\r\n// setTimeout(() => {engine.pause()}, 2000);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scripts/modules/game.js\n// module id = 7\n// module chunks = 0","export default class Input {\r\n  constructor() {\r\n\r\n  }\r\n\r\n  listen() {\r\n    document.addEventListener('keyup', (event) => {\r\n      switch (event.key) {\r\n        case \"ArrowUp\":\r\n          console.log('up');\r\n          break;\r\n        case \"ArrowDown\":\r\n          break;\r\n        case \"ArrowLeft\":\r\n          break;\r\n        case \"ArrowRight\":\r\n          break;\r\n      }\r\n      event.preventDefault();\r\n    });\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scripts/modules/input.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}